{"version":3,"file":"static/js/806.f6e78fd2.chunk.js","mappings":"iNAEaA,EAAsBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAQ/BC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8lB,kBCJrBG,EAAa,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACX,EAAmB,CAAAY,SACjBJ,EAAMK,KAAI,SAAAC,GAAI,OACbH,EAAAA,EAAAA,KAACP,EAAS,CAAAQ,UACRG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,EAAKK,IAAMC,MAAO,CAAEC,KAAMZ,GAAWG,SAAA,EACxDD,EAAAA,EAAAA,KAAA,OACEW,IACER,EAAKS,YAAW,kCAAAL,OACsBJ,EAAKS,aACvCC,EAENC,IAAKX,EAAKY,MACVC,MACGb,EAAKS,YAAmD,CAAC,EAAtC,CAAEK,MAAO,QAASC,OAAQ,WAGlDlB,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAKY,YAbGZ,EAAKK,GAeT,KAIpB,C,wJCnBe,SAASW,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACkB,SAAAC,IAUzB,OAVyBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA1B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEuB,OAFvBF,EAAAC,KAAA,EAEIT,GAAa,GAAMQ,EAAAE,KAAA,GACOC,EAAAA,EAAAA,MAAoB,KAAD,EAAAL,EAAAE,EAAAI,KAArCL,EAAOD,EAAPC,QACRf,EAAUe,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBZ,GAAS,GAAM,QAEK,OAFLY,EAAAC,KAAA,GAEfT,GAAa,GAAOQ,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,EAXc,WACWf,EAAAc,MAAC,KAADC,UAAA,CAW1BC,EACF,GAAG,KAGD/C,EAAAA,EAAAA,MAACgD,EAAAA,GAAiB,CAAAnD,SAAA,EAChBD,EAAAA,EAAAA,KAACqD,EAAAA,GAAK,CAAApD,SAAC,mBACN2B,IACC5B,EAAAA,EAAAA,KAACsD,EAAAA,GAAY,CAAArD,SAAC,gEAIf+B,IAAahC,EAAAA,EAAAA,KAACuD,EAAAA,GAAc,CAAAtD,SAAC,eAC7BuB,EAAOgC,OAAS,IAAKxD,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,MAAO2B,MAG/C,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/HomePage/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 14px;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px;\n  text-align: center;\n\n  a {\n    text-decoration: none;\n    color: #333;\n\n    img {\n      max-width: 300px;\n      height: auto;\n      border-radius: 8px;\n      margin-bottom: 8px;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      transition: transform 0.3s ease;\n\n      &:hover {\n        transform: scale(1.05);\n      }\n    }\n\n    p {\n      margin: 15px;\n      font-weight: bold;\n      font-size: 18px;\n      text-align: center;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      max-width: 250px;\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport { MoviesListContainer, MovieItem } from './MoviesList.styled';\n\nimport mainplaceholder from 'services/mainplaceholder.png';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListContainer>\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <img\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : mainplaceholder\n              }\n              alt={film.title}\n              style={\n                !film.poster_path ? { width: '300px', height: 'auto' } : {}\n              }\n            />\n            <p>{film.title}</p>\n          </Link>\n        </MovieItem>\n      ))}\n    </MoviesListContainer>\n  );\n};\n","import { getTrendingMovies } from '../../services/api';\nimport { useEffect, useState } from 'react';\n\nimport {\n  TrendingContainer,\n  Title,\n  ErrorMessage,\n  LoadingMessage,\n} from './HomePage.styled';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrending() {\n      try {\n        setIsLoading(true);\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getTrending();\n  }, []);\n\n  return (\n    <TrendingContainer>\n      <Title>Trending today</Title>\n      {error && (\n        <ErrorMessage>\n          Oops! Something went wrong! Please try reloading this page!\n        </ErrorMessage>\n      )}\n      {isLoading && <LoadingMessage>Loading...</LoadingMessage>}\n      {movies.length > 0 && <MoviesList films={movies} />}\n    </TrendingContainer>\n  );\n}\n"],"names":["MoviesListContainer","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MoviesList","_ref","films","location","useLocation","_jsx","children","map","film","_jsxs","Link","to","concat","id","state","from","src","poster_path","mainplaceholder","alt","title","style","width","height","HomePage","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","_getTrending","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendingMov","results","_context","prev","next","getTrendingMovies","sent","t0","finish","stop","apply","arguments","getTrending","TrendingContainer","Title","ErrorMessage","LoadingMessage","length"],"sourceRoot":""}